name: Source Generator CI2

on:
  workflow_dispatch:
  push:
    branches:
      - feature/annotations-enchilada
  pull_request:

jobs:
  source-generator-build-pack-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Get Branch Name
      run: echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV
    - name: Setup Version
      run: echo "V=0.52.${{ github.run_number }}-$BRANCH_NAME" >> $GITHUB_ENV
    - name: Echo Version
      run: echo $V
    - name: Setup .NET 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Setup .NET 7.0
      uses: actions/setup-dotnet@v1
      with:
        include-prerelease: true
        dotnet-version: 7.0.100-preview.6
    - name: Restore dependencies
      run: |
        dotnet restore Libraries/src/Amazon.Lambda.Annotations/Amazon.Lambda.Annotations.csproj
        dotnet restore Libraries/test/Amazon.Lambda.Annotations.SourceGenerators.Tests/Amazon.Lambda.Annotations.SourceGenerators.Tests.csproj
        dotnet restore Libraries/test/TestServerlessApp.IntegrationTests/TestServerlessApp.IntegrationTests.csproj
    - name: Build
      run: |
        dotnet build Libraries/src/Amazon.Lambda.Annotations/Amazon.Lambda.Annotations.csproj --no-restore --configuration Release
        dotnet build Libraries/test/Amazon.Lambda.Annotations.SourceGenerators.Tests/Amazon.Lambda.Annotations.SourceGenerators.Tests.csproj --no-restore --configuration Release
        dotnet build Libraries/test/TestServerlessApp.IntegrationTests/TestServerlessApp.IntegrationTests.csproj --no-restore --configuration Release
    - name: Pack Annotations
      run: dotnet pack Libraries/src/Amazon.Lambda.Annotations/Amazon.Lambda.Annotations.csproj -p:NuspecFile=../Amazon.Lambda.Annotations.nuspec --no-build --configuration Release --output "PackResults" -p:NuspecProperties="Version=$V"
    - name: Pack Generators
      run: dotnet pack Libraries/src/Amazon.Lambda.Annotations.SourceGenerator/Amazon.Lambda.Annotations.SourceGenerator.csproj -p:PackageVersion=$V -p:TargetFrameworks=netstandard2.0 --output "PackResults"
    - name: Upload pack results
      uses: actions/upload-artifact@v2
      with:
        name: source-generator-nuget-package
        path: PackResults
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
    - name: Test
      run: |
        dotnet test Libraries/test/Amazon.Lambda.Annotations.SourceGenerators.Tests/Amazon.Lambda.Annotations.SourceGenerators.Tests.csproj --no-build --configuration Release --verbosity normal --logger trx --results-directory "TestResults"
    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: source-generator-test-result
        path: TestResults
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
    - name: Find NuPkg
      run: find -name "PackResults/*.nupkg"
    - name: Setup GitHub Nuget
      run: dotnet nuget add source --username hounddog22030 --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/hounddog22030/index.json"
    - name: Publish Package To GitHub
      run: dotnet nuget push PackResults/*.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source "github"
